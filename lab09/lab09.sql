--Задание №2
-- (PDB, user)
CREATE GLOBAL TEMPORARY TABLE TEMP_T (
    ID INT,
    DATA NVARCHAR2(30),
    CONSTRAINT PK_TEMP_T PRIMARY KEY (ID)
);

BEGIN
    FOR i IN 1..20 
    LOOP
        INSERT INTO TEMP_T(ID, DATA) VALUES (i, CONCAT('data', TO_CHAR(i)));
    END LOOP;
END;

SELECT * FROM TEMP_T;


-- Задание №3
-- (PDB, user)
CREATE SEQUENCE S1
    START WITH 1000
    INCREMENT BY 10
    NOMINVALUE
    NOMAXVALUE
    NOCYCLE
    NOCACHE
    NOORDER
;

SELECT S1.NEXTVAL FROM DUAL;

SELECT S1.CURRVAL FROM DUAL;


-- Задание №4
-- (PDB, user)
CREATE SEQUENCE S2
    START WITH 10
    INCREMENT BY 10
    MAXVALUE 100
    NOCYCLE
;

SELECT S2.NEXTVAL FROM DUAL;

SELECT S2.CURRVAL FROM DUAL;


-- Задание №5
-- (PDB, user)
CREATE SEQUENCE S3
    START WITH 10
    INCREMENT BY -10
    MINVALUE -100
    MAXVALUE 10
    NOCYCLE
    ORDER
;

SELECT S3.NEXTVAL FROM DUAL;

SELECT S3.CURRVAL FROM DUAL;


-- Задание №6
-- (PDB, user)
CREATE SEQUENCE S4
    START WITH 1
    INCREMENT BY 1
    MINVALUE 1
    MAXVALUE 10
    CYCLE
    CACHE 5
    NOORDER
;

SELECT S4.NEXTVAL FROM DUAL;

SELECT S4.CURRVAL FROM DUAL;


-- Задание №7
-- (PDB, user)
SELECT * FROM USER_SEQUENCES;


-- Задание №8
CREATE TABLE T1 (
    N1 NUMBER(20),
    N2 NUMBER(20),
    N3 NUMBER(20),
    N4 NUMBER(20)
)
CACHE
STORAGE (BUFFER_POOL KEEP)
;

ALTER SEQUENCE S1 RESTART;
ALTER SEQUENCE S2 RESTART;
ALTER SEQUENCE S3 RESTART;
ALTER SEQUENCE S4 RESTART;

BEGIN
    FOR i IN 1..7
    LOOP
        INSERT INTO T1(N1, N2, N3, N4) VALUES (S1.NEXTVAL, S2.NEXTVAL, S3.NEXTVAL, S4.NEXTVAL);
    END LOOP;
END;

SELECT * FROM T1;


-- Задание №9
-- (PDB, user)
CREATE CLUSTER ABC (
    X NUMBER(10),
    V VARCHAR(12)
)
hashkeys 200
;


-- Задание №10
-- (PDB, user)
CREATE TABLE A (
    XA NUMBER(10),
    VA VARCHAR(12),
    YA INT
)
CLUSTER ABC(XA, VA)
;


-- Задание №11
-- (PDB, user)
CREATE TABLE B (
    XB NUMBER(10),
    VB VARCHAR(12),
    YB CHAR(1)
)
CLUSTER ABC(XB, VB)
;


-- Задание №12
-- (PDB, user)
CREATE TABLE C (
    XC NUMBER(10),
    VC VARCHAR(12),
    YC DATE
)
CLUSTER ABC(XC, VC)
;


-- Задание №13
-- (PDB, user)
SELECT * FROM USER_CLUSTERS;
SELECT * FROM USER_SEGMENTS;
SELECT * FROM USER_TABLES;


-- Задание №14
-- (PDB, user)
CREATE SYNONYM CSYM FOR TNA.C;
-- (PDB, user, system)
SELECT * FROM TNA.C;
SELECT * FROM CSYM;

-- Задание №15
-- (PDB, user)
CREATE PUBLIC SYNONYM BSYM FOR TNA.B;
-- (PDB, user, system)
SELECT * FROM TNA.B;
SELECT * FROM BSYM;


-- Задание №16
-- (PDB, user)
CREATE TABLE D (
    ID INT PRIMARY KEY,
    FDATA VARCHAR(10)
);

CREATE TABLE E (
    ID INT REFERENCES D(ID),
    SDATA VARCHAR(10)
);

BEGIN
    FOR i IN 1..100
    LOOP
        INSERT INTO D(ID, FDATA) VALUES (i, CONCAT('fdata', TO_CHAR(i)));
        INSERT INTO E(ID, SDATA) VALUES (i, CONCAT('sdata', TO_CHAR(i)));
    END LOOP;
END;

CREATE VIEW V1
AS
SELECT 
    D.ID AS ID, 
    FDATA AS F,
    SDATA AS S
FROM
    D INNER JOIN E ON D.ID = E.ID
;

SELECT * FROM V1;


-- Задание №17
-- (PDB, user)
CREATE MATERIALIZED VIEW MV_TNA
REFRESH FORCE START WITH SYSDATE NEXT SYSDATE + INTERVAL '2' MINUTE
ENABLE QUERY REWRITE
AS
SELECT
    D.ID AS ID,
    FDATA AS F,
    SDATA AS s
FROM
    D INNER JOIN E ON D.ID = E.ID
;

INSERT INTO D(ID, FDATA) VALUES (101, CONCAT('fdata', TO_CHAR(101)));
INSERT INTO E(ID, SDATA) VALUES (101, CONCAT('sdata', TO_CHAR(101)));
COMMIT;

SELECT * FROM MV_TNA;


-- Задание №18
-- (PDB, user)
CREATE DATABASE LINK ANOTHERDB
    CONNECT TO C##TNA IDENTIFIED BY "2025"
    USING 'LAB09DBLINK' -- TNS
;


-- Задание №19
-- (PDB, user)
SELECT * FROM USER_TABLES@ANOTHERDB;

SELECT * FROM TEST_T@ANOTHERDB;

INSERT INTO TEST_T@ANOTHERDB(ID, VALUE) VALUES (30, 'test1');
INSERT INTO TEST_T@ANOTHERDB(ID, VALUE) VALUES (31, 'test2');
INSERT INTO TEST_T@ANOTHERDB(ID, VALUE) VALUES (32, 'test3');

UPDATE TEST_T@ANOTHERDB SET VALUE = 'test35' WHERE ID = 31;

DELETE FROM TEST_T@ANOTHERDB WHERE ID >= 30;


-- Удаление объектов
-- (PDB, user)
DROP TABLE TEMP_T;
DROP SEQUENCE S1;
DROP SEQUENCE S2;
DROP SEQUENCE S3;
DROP SEQUENCE S4;
DROP TABLE T1;
DROP TABLE A;
DROP TABLE B;
DROP TABLE C;
DROP CLUSTER ABC;
DROP SYNONYM CSYM;
DROP PUBLIC SYNONYM BSYM;
DROP VIEW V1;
DROP MATERIALIZED VIEW MV_TNA;
DROP TABLE E;
DROP TABLE D;
DROP DATABASE LINK ANOTHERDB;
